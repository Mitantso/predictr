{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"Non loqui forte ad trium undas illud Sorori modo virgine Lorem markdownum frugum. Nos init potuissent inmemor. Nec dei fregit relicta Non venti suus Talia praedaeque aliis probas potentem celerem Oleniden Sedit caput nautae ripis saepe quem non; fertur armis ancipitemque. Omnia petitur flores invidiosa. Tellus tractu Reprensa dixit liquidum infirmos dotem cum cursu munera graves; quae laudaret est nec excepto numen siquid ense. Omnipotens cognita ignes; invalidus magnorum acies et trepidum vix palmis, vale. Vidi somnia victa; tum media tergum, tradere de imago domus, sunt pavet tela , anguis nova sua. Parvus non gerebam te Mater , atque Ut vultus facitote amicitur proles pars meosque opus digiti leonis iam solacia . Placere defendere recens quamvis, et faciem, et cadunt lacerti, undis. Cunctos est parte dentes cibo iuvabat est, hostis fissa nympha divellite. Valens socerque, coeunt, ait iniuria fuit angit dimovit. Super niveis , quid aut aquae, Sinuessa tendebant et ipse ulciscitur muneris positis, feras se foedera arces tempora. Nunc summo cumque vel septem digitoque ossaque post. Ter corpore frustra amorem quandoquidem coniuge, socium aut protinus canunt tulit fuit, iste tetigit nubemque. Virgineos o mersis. Revulsum firmo intumuere cum Cereris recuso Lacu casa subnectite evocat quique; cecinit discutit. Ilia cum cibos fiuntque iuguli nempe origine, sub foramina! Membra membra Omnes manus coloni cognataque malignas es dixit Terrebat pendet recondiderat rictus commissas velles sidere Figit ante laqueique respicit Titulos conataeque Amore amnis aures semper amplexa arcadiae, colorem monimenta recentibus factique lacrimis quid? Sic sumptis subsunt committitur Morpheus spectat, inbutam coronas, facibus devotaque. Miserabile tamen redeuntibus herbis carchesia mortali armos, qui fortior corpore vates, materia exit. Tela addidit spatiantibus pauca sonat; mihi hoc ergo his animam ordine tunc corruit licet socia superasque vertigine sol popularia. Crudus in facta , et et inesset, cum vos quid est, monuit hector, petit aderant geminas Eumenidum.","title":"About"},{"location":"about/#non-loqui-forte-ad-trium-undas-illud","text":"","title":"Non loqui forte ad trium undas illud"},{"location":"about/#sorori-modo-virgine","text":"Lorem markdownum frugum. Nos init potuissent inmemor. Nec dei fregit relicta Non venti suus Talia praedaeque aliis probas potentem celerem Oleniden Sedit caput nautae ripis saepe quem non; fertur armis ancipitemque. Omnia petitur flores invidiosa.","title":"Sorori modo virgine"},{"location":"about/#tellus-tractu","text":"Reprensa dixit liquidum infirmos dotem cum cursu munera graves; quae laudaret est nec excepto numen siquid ense. Omnipotens cognita ignes; invalidus magnorum acies et trepidum vix palmis, vale. Vidi somnia victa; tum media tergum, tradere de imago domus, sunt pavet tela , anguis nova sua. Parvus non gerebam te Mater , atque Ut vultus facitote amicitur proles pars meosque opus digiti leonis iam solacia . Placere defendere recens quamvis, et faciem, et cadunt lacerti, undis. Cunctos est parte dentes cibo iuvabat est, hostis fissa nympha divellite. Valens socerque, coeunt, ait iniuria fuit angit dimovit. Super niveis , quid aut aquae, Sinuessa tendebant et ipse ulciscitur muneris positis, feras se foedera arces tempora. Nunc summo cumque vel septem digitoque ossaque post. Ter corpore frustra amorem quandoquidem coniuge, socium aut protinus canunt tulit fuit, iste tetigit nubemque. Virgineos o mersis.","title":"Tellus tractu"},{"location":"about/#revulsum-firmo-intumuere-cum-cereris-recuso","text":"Lacu casa subnectite evocat quique; cecinit discutit. Ilia cum cibos fiuntque iuguli nempe origine, sub foramina! Membra membra Omnes manus coloni cognataque malignas es dixit Terrebat pendet recondiderat rictus commissas velles sidere Figit ante laqueique respicit Titulos conataeque Amore amnis aures semper amplexa arcadiae, colorem monimenta recentibus factique lacrimis quid? Sic sumptis subsunt committitur Morpheus spectat, inbutam coronas, facibus devotaque. Miserabile tamen redeuntibus herbis carchesia mortali armos, qui fortior corpore vates, materia exit. Tela addidit spatiantibus pauca sonat; mihi hoc ergo his animam ordine tunc corruit licet socia superasque vertigine sol popularia. Crudus in facta , et et inesset, cum vos quid est, monuit hector, petit aderant geminas Eumenidum.","title":"Revulsum firmo intumuere cum Cereris recuso"},{"location":"overview/","text":"predictr - Predict the Reliability predictr: predict + reliability, in other words: A tool to predict the reliability. The aim of this package is to provide state of the art tools for all kinds of Weibull analyses. predictr already includes many methods (see tables below). A guideline on when to use which method will be added soon. Installation Use the package manager pip to install predictr. pip install predictr Usage Import predictr in python from predictr import Analysis How to use the Analysis class after importing If both df and ds are None, an error will be raised. Configure all needed arguments that fit your use case. Arguments to pass in Analysis class: Analysis(df: list = None, ds: list = None, show: bool = False, plot_style='ggplot', bounds=None, bounds_type='2s', cl=0.9, bcm=None, bs_size=5000, est_type='median', unit='-') Step 1: Create an instance of the class Analysis The class object is some prototype data, so we will call it \"prototype_test\". You can name it whatever you want. prototype_test = Analysis(df = [200, 300, 400], show=True) Step 2: Use one of the instance methods (mle() or mrr()) of class Analysis prototype_test.mle() -> MLE or prototype_test.mrr() -> MRR Default Parameter values df: list = None -> list of failures in seconds, days, no. of cycles etc., e.g. df = [100, 120, 80, 300] ds: list = None -> list of suspensions (right-censored) in seconds, days, no. of cycles etc., e.g. ds = [300, 400, 400] show: bool = False -> If True, the Weibull probability plot will be plotted. plot_style = 'ggplot' -> Choose a style according to your needs. See https://matplotlib.org/3.1.0/gallery/style_sheets/style_sheets_reference.html for styles. bounds=None -> Use following table to configure everything related to confidence bounds, e.g. if you want to use Monte-Carlo pivotal bounds for the Median Rank Regression: bounds = 'mcpb'. confidence bounds mle() mrr() uncensored data censored data type argument value Beta-Binomial Bounds - x x x '2s', '1sl', '1su' 'bbb' Monte-Carlo Pivotal Bounds - x x x '2s', '1sl', '1su' 'mcpb' Non-Parametric Bootstrap Bounds x x x - '2s', '1sl', '1su' 'npbb' Parametric Bootstrap Bounds x x x - '2s', '1sl', '1su' 'pbb' Fisher Bounds x - x x '2s', '1sl', '1su' 'fb' Likelihood Ratio Bounds x - x x '2s', '1sl', '1su' 'lrb' bounds_type = '2s' -> '2s': two-sided confidence bounds, '1su': upper confidence bounds, '1sl': lower confidence bounds. E.g. bounds_type = '1sl'. cl=0.9 -> configure the confidence level in the intervall (0, 1.0) bcm=None -> Define the bias-correction method when the MLE is being used. Bootstrap bias-corrections are dependent on the number of bootstrap replication and the chosen statistic, e.g. if bcm = 'np_bs': bs_size = 5000 and est_type = 'median'. bs_size = 5000 -> Resampling/Bootstrap sample size (number of replication). bs_size should be greater than or equal to 2000 for accurate results. The higher the number of replications, the longer it takes to compute the bias-correction. est_type = 'median' -> When using bootstrap bias-corrections, this argument decides which statistic to compute from the bootstrap samples. The following table provides possible configurations. Bias-corrections for mrr() are not supported, yet. Bias-correction method mle() mrr() argument value config. statistic C4 x - 'c4' - - hrbu x - 'hrbu' - - non-parametric Bootstrap correction x - 'np_bs' bs_size 'mean', 'median', 'trimmed_mean' Parametric Bootstrap correction x - 'p_bs' bs_size 'mean', 'median', 'trimmed_mean' unit = '-' -> Unit of the elements in df and ds, e.g. unit = 'seconds', unit = 'days', unit = 'ms' etc. How to use the Maximum Likelihood Estimation (MLE) object = Analysis() object. mle() Uncensored sample Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] prototype_a = Analysis(df=failures, bounds='fb',show=True) prototype_a.mle() Censored sample Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] suspensions = [1.9, 2.0, 2.0] prototype_a = Analysis(df=failures, ds=suspensions, bounds='lrb',show=True) prototype_a.mle() How to use the Median Rank Regression (MRR) object = Analysis() object. mrr() Uncensored sample Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] prototype_a = Analysis(df=failures, bounds='bbb',show=True) prototype_a.mrr() Censored sample Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] suspensions = [1.9, 2.0, 2.0] prototype_a = Analysis(df=failures, ds=suspensions, bounds='mcpb',show=True) prototype_a.mrr() To Do I will add a homepage with more detailed examples and guidelines for non-experts in the field of reliability engineering.","title":"Overview"},{"location":"overview/#predictr-predict-the-reliability","text":"predictr: predict + reliability, in other words: A tool to predict the reliability. The aim of this package is to provide state of the art tools for all kinds of Weibull analyses. predictr already includes many methods (see tables below). A guideline on when to use which method will be added soon.","title":"predictr - Predict the Reliability"},{"location":"overview/#installation","text":"Use the package manager pip to install predictr. pip install predictr","title":"Installation"},{"location":"overview/#usage","text":"","title":"Usage"},{"location":"overview/#import-predictr-in-python","text":"from predictr import Analysis","title":"Import predictr in python"},{"location":"overview/#how-to-use-the-analysis-class-after-importing","text":"If both df and ds are None, an error will be raised. Configure all needed arguments that fit your use case. Arguments to pass in Analysis class: Analysis(df: list = None, ds: list = None, show: bool = False, plot_style='ggplot', bounds=None, bounds_type='2s', cl=0.9, bcm=None, bs_size=5000, est_type='median', unit='-') Step 1: Create an instance of the class Analysis The class object is some prototype data, so we will call it \"prototype_test\". You can name it whatever you want. prototype_test = Analysis(df = [200, 300, 400], show=True) Step 2: Use one of the instance methods (mle() or mrr()) of class Analysis prototype_test.mle() -> MLE or prototype_test.mrr() -> MRR","title":"How to use the Analysis class after importing"},{"location":"overview/#default-parameter-values","text":"df: list = None -> list of failures in seconds, days, no. of cycles etc., e.g. df = [100, 120, 80, 300] ds: list = None -> list of suspensions (right-censored) in seconds, days, no. of cycles etc., e.g. ds = [300, 400, 400] show: bool = False -> If True, the Weibull probability plot will be plotted. plot_style = 'ggplot' -> Choose a style according to your needs. See https://matplotlib.org/3.1.0/gallery/style_sheets/style_sheets_reference.html for styles. bounds=None -> Use following table to configure everything related to confidence bounds, e.g. if you want to use Monte-Carlo pivotal bounds for the Median Rank Regression: bounds = 'mcpb'. confidence bounds mle() mrr() uncensored data censored data type argument value Beta-Binomial Bounds - x x x '2s', '1sl', '1su' 'bbb' Monte-Carlo Pivotal Bounds - x x x '2s', '1sl', '1su' 'mcpb' Non-Parametric Bootstrap Bounds x x x - '2s', '1sl', '1su' 'npbb' Parametric Bootstrap Bounds x x x - '2s', '1sl', '1su' 'pbb' Fisher Bounds x - x x '2s', '1sl', '1su' 'fb' Likelihood Ratio Bounds x - x x '2s', '1sl', '1su' 'lrb' bounds_type = '2s' -> '2s': two-sided confidence bounds, '1su': upper confidence bounds, '1sl': lower confidence bounds. E.g. bounds_type = '1sl'. cl=0.9 -> configure the confidence level in the intervall (0, 1.0) bcm=None -> Define the bias-correction method when the MLE is being used. Bootstrap bias-corrections are dependent on the number of bootstrap replication and the chosen statistic, e.g. if bcm = 'np_bs': bs_size = 5000 and est_type = 'median'. bs_size = 5000 -> Resampling/Bootstrap sample size (number of replication). bs_size should be greater than or equal to 2000 for accurate results. The higher the number of replications, the longer it takes to compute the bias-correction. est_type = 'median' -> When using bootstrap bias-corrections, this argument decides which statistic to compute from the bootstrap samples. The following table provides possible configurations. Bias-corrections for mrr() are not supported, yet. Bias-correction method mle() mrr() argument value config. statistic C4 x - 'c4' - - hrbu x - 'hrbu' - - non-parametric Bootstrap correction x - 'np_bs' bs_size 'mean', 'median', 'trimmed_mean' Parametric Bootstrap correction x - 'p_bs' bs_size 'mean', 'median', 'trimmed_mean' unit = '-' -> Unit of the elements in df and ds, e.g. unit = 'seconds', unit = 'days', unit = 'ms' etc.","title":"Default Parameter values"},{"location":"overview/#how-to-use-the-maximum-likelihood-estimation-mle","text":"object = Analysis() object. mle()","title":"How to use the Maximum Likelihood Estimation (MLE)"},{"location":"overview/#uncensored-sample","text":"Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] prototype_a = Analysis(df=failures, bounds='fb',show=True) prototype_a.mle()","title":"Uncensored sample"},{"location":"overview/#censored-sample","text":"Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] suspensions = [1.9, 2.0, 2.0] prototype_a = Analysis(df=failures, ds=suspensions, bounds='lrb',show=True) prototype_a.mle()","title":"Censored sample"},{"location":"overview/#how-to-use-the-median-rank-regression-mrr","text":"object = Analysis() object. mrr()","title":"How to use the Median Rank Regression (MRR)"},{"location":"overview/#uncensored-sample_1","text":"Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] prototype_a = Analysis(df=failures, bounds='bbb',show=True) prototype_a.mrr()","title":"Uncensored sample"},{"location":"overview/#censored-sample_1","text":"Example: failures = [0.4508831, 0.68564703, 0.76826143, 0.88231395, 1.48287253, 1.62876357] suspensions = [1.9, 2.0, 2.0] prototype_a = Analysis(df=failures, ds=suspensions, bounds='mcpb',show=True) prototype_a.mrr()","title":"Censored sample"},{"location":"overview/#to-do","text":"I will add a homepage with more detailed examples and guidelines for non-experts in the field of reliability engineering.","title":"To Do"}]}